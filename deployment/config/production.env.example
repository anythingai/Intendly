# Intent-Based Trading Aggregator - Production Environment Configuration
# Copy this file to production.env and fill in your production values

# =============================================================================
# ENVIRONMENT IDENTIFICATION
# =============================================================================
NODE_ENV=production
DEPLOYMENT_ENV=production
ENVIRONMENT=production

# =============================================================================
# BLOCKCHAIN CONFIGURATION
# =============================================================================

# X Layer Mainnet Configuration
CHAIN_ID=196
RPC_URL=https://xlayerrpc.okx.com
XLAYER_API_KEY=your-xlayer-mainnet-api-key

# Backup RPC URLs for redundancy
RPC_URL_BACKUP_1=https://rpc.xlayer.tech
RPC_URL_BACKUP_2=https://xlayer-rpc.alt.technology

# Contract Addresses (Update after deployment)
PERMIT2_ADDRESS=0x000000000022D473030F116dDEE9F6B43aC78BA3
ROUTER_ADDRESS=0x0000000000000000000000000000000000000000
SETTLEMENT_CONTRACT_ADDRESS=0x0000000000000000000000000000000000000000

# Contract Deployment Configuration
CONTRACT_OWNER=0x0000000000000000000000000000000000000000
FEE_TREASURY=0x0000000000000000000000000000000000000000
DEPLOYER_PRIVATE_KEY=0x0000000000000000000000000000000000000000000000000000000000000000

# =============================================================================
# SERVICE CONFIGURATION
# =============================================================================

# API Configuration
API_PORT=3001
WS_PORT=3002
HOST=0.0.0.0

# High-performance production settings
API_RATE_LIMIT_WINDOW=900000
API_RATE_LIMIT_MAX=1000
WS_MAX_CONNECTIONS=10000
WS_HEARTBEAT_INTERVAL=30000
WS_CONNECTION_TIMEOUT=60000

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL Production Database
DATABASE_URL=postgresql://intendly_prod:super_secure_password@prod-db.internal:5432/intendly_production
POSTGRES_DB=intendly_production
POSTGRES_USER=intendly_prod
POSTGRES_PASSWORD=super_secure_password

# Connection Pool Settings
DB_POOL_MIN=5
DB_POOL_MAX=50
DB_IDLE_TIMEOUT=10000
DB_CONNECTION_TIMEOUT=5000

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================

# Redis Production Configuration
REDIS_URL=redis://:super_secure_redis_password@prod-redis.internal:6379
REDIS_PASSWORD=super_secure_redis_password
REDIS_KEY_PREFIX=intendly:prod:
REDIS_MAX_RETRIES=3

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# JWT Configuration (Generate with: openssl rand -base64 64)
JWT_SECRET=super-secure-jwt-secret-that-should-be-at-least-64-characters-long-for-production
JWT_EXPIRES_IN=24h

# CORS Configuration
CORS_ORIGINS=https://app.intendly.xyz,https://intendly.xyz

# Rate Limiting
RATE_LIMIT_POINTS=100
RATE_LIMIT_DURATION=60

# =============================================================================
# SSL/TLS CONFIGURATION
# =============================================================================

# SSL Certificate Configuration
SSL_CERT_PATH=/etc/ssl/certs/intendly.crt
SSL_KEY_PATH=/etc/ssl/private/intendly.key
SSL_CA_PATH=/etc/ssl/certs/ca-bundle.crt

# HTTPS Redirect
FORCE_HTTPS=true
HSTS_MAX_AGE=31536000

# =============================================================================
# DOCKER & KUBERNETES
# =============================================================================

# Docker Registry
DOCKER_REGISTRY=ghcr.io/intendly
DOCKER_TAG=latest

# Kubernetes Configuration
KUBERNETES_NAMESPACE=intendly-production
KUBERNETES_CLUSTER=production-cluster

# Resource Limits
BACKEND_CPU_LIMIT=2000m
BACKEND_MEMORY_LIMIT=2Gi
BACKEND_CPU_REQUEST=1000m
BACKEND_MEMORY_REQUEST=1Gi

# =============================================================================
# MONITORING & LOGGING
# =============================================================================

# Monitoring Configuration
METRICS_ENABLED=true
PROMETHEUS_PORT=9090
GRAFANA_PASSWORD=super_secure_grafana_password
GRAFANA_SECRET_KEY=super_secure_grafana_secret_key

# Log Configuration
LOG_LEVEL=info
LOG_FORMAT=json
LOG_MAX_FILES=30
LOG_MAX_SIZE=100m

# External Monitoring
DATADOG_API_KEY=your_datadog_api_key
NEW_RELIC_LICENSE_KEY=your_newrelic_license_key

# =============================================================================
# EXTERNAL SERVICES
# =============================================================================

# Cloud Provider Configuration (AWS)
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=AKIA...
AWS_SECRET_ACCESS_KEY=...
S3_BUCKET=intendly-production-assets

# CDN Configuration
CLOUDFLARE_API_TOKEN=your_cloudflare_token
CLOUDFLARE_ZONE_ID=your_zone_id

# =============================================================================
# BUSINESS CONFIGURATION
# =============================================================================

# Trading Configuration
BIDDING_WINDOW_MS=2000
MAX_SOLVER_FEE_BPS=25
MIN_BID_COUNT=2
MAX_SLIPPAGE_BPS=50

# Fee Configuration
PROTOCOL_FEE_BPS=5
FEE_COLLECTOR=0x0000000000000000000000000000000000000000

# =============================================================================
# BACKUP & DISASTER RECOVERY
# =============================================================================

# Database Backup Configuration
BACKUP_RETENTION_DAYS=30
BACKUP_SCHEDULE="0 2 * * *"  # Daily at 2 AM
BACKUP_S3_BUCKET=intendly-production-backups

# Redis Backup Configuration
REDIS_BACKUP_ENABLED=true
REDIS_BACKUP_SCHEDULE="0 3 * * *"  # Daily at 3 AM

# =============================================================================
# PERFORMANCE OPTIMIZATION
# =============================================================================

# Node.js Performance
NODE_OPTIONS="--max-old-space-size=2048"
UV_THREADPOOL_SIZE=128

# Caching Configuration
CACHE_TTL=300
CACHE_MAX_SIZE=1000

# =============================================================================
# ALERTING CONFIGURATION
# =============================================================================

# Slack Notifications
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/your/slack/webhook
SLACK_CHANNEL=#production-alerts

# PagerDuty Integration
PAGERDUTY_INTEGRATION_KEY=your_pagerduty_integration_key

# Email Alerts
SMTP_HOST=smtp.sendgrid.net
SMTP_PORT=587
SMTP_USER=apikey
SMTP_PASS=your_sendgrid_api_key
ALERT_EMAIL_FROM=alerts@intendly.xyz
ALERT_EMAIL_TO=team@intendly.xyz

# =============================================================================
# FRONTEND DEPLOYMENT
# =============================================================================

# Vercel Configuration
VERCEL_TOKEN=your_vercel_deployment_token
VERCEL_PROJECT_ID=your_vercel_project_id

# Public URLs for Frontend
NEXT_PUBLIC_API_URL=https://api.intendly.xyz
NEXT_PUBLIC_WS_URL=wss://api.intendly.xyz
NEXT_PUBLIC_BASE_URL=https://app.intendly.xyz

# Public Blockchain Configuration
NEXT_PUBLIC_CHAIN_ID=196
NEXT_PUBLIC_SETTLEMENT_CONTRACT=0x0000000000000000000000000000000000000000
NEXT_PUBLIC_PERMIT2_ADDRESS=0x000000000022D473030F116dDEE9F6B43aC78BA3

# =============================================================================
# HEALTH CHECK URLS
# =============================================================================

# Service URLs for Health Checks
PRODUCTION_API_URL=https://api.intendly.xyz
PRODUCTION_FRONTEND_URL=https://app.intendly.xyz
PRODUCTION_WS_URL=wss://api.intendly.xyz
PRODUCTION_GRAFANA_URL=https://monitoring.intendly.xyz
PRODUCTION_PROMETHEUS_URL=https://prometheus.intendly.xyz

# Database Connection for Health Checks
DATABASE_HOST=prod-db.internal
DATABASE_PORT=5432
REDIS_HOST=prod-redis.internal
REDIS_PORT=6379

# =============================================================================
# SECURITY NOTES
# =============================================================================

# CRITICAL SECURITY REMINDERS:
# 1. Replace all placeholder values with real production credentials
# 2. Use different secrets for each environment
# 3. Rotate all secrets regularly (monthly recommended)
# 4. Never commit real credentials to version control
# 5. Use HashiCorp Vault or AWS Secrets Manager for secret management
# 6. Enable 2FA on all service accounts
# 7. Use least privilege principle for all access controls
# 8. Regularly audit access logs and permissions
# 9. Implement proper key escrow and recovery procedures
# 10. Monitor for credential leaks and unauthorized access