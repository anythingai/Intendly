# Intent-Based Trading Aggregator - Staging Environment Configuration
# Copy this file to staging.env and fill in your staging values

# =============================================================================
# ENVIRONMENT IDENTIFICATION
# =============================================================================
NODE_ENV=staging
DEPLOYMENT_ENV=staging
ENVIRONMENT=staging

# =============================================================================
# BLOCKCHAIN CONFIGURATION
# =============================================================================

# X Layer Testnet Configuration
CHAIN_ID=195
RPC_URL=https://testrpc.xlayer.tech
XLAYER_API_KEY=your-xlayer-testnet-api-key

# Backup RPC URLs
RPC_URL_BACKUP_1=https://xlayerrpc.okx.com
RPC_URL_BACKUP_2=https://rpc-testnet.xlayer.tech

# Contract Addresses (Update after deployment)
PERMIT2_ADDRESS=0x000000000022D473030F116dDEE9F6B43aC78BA3
ROUTER_ADDRESS=0x0000000000000000000000000000000000000000
SETTLEMENT_CONTRACT_ADDRESS=0x0000000000000000000000000000000000000000

# Contract Deployment Configuration
CONTRACT_OWNER=0x0000000000000000000000000000000000000000
FEE_TREASURY=0x0000000000000000000000000000000000000000
DEPLOYER_PRIVATE_KEY=0x0000000000000000000000000000000000000000000000000000000000000000

# =============================================================================
# SERVICE CONFIGURATION
# =============================================================================

# API Configuration
API_PORT=3001
WS_PORT=3002
HOST=0.0.0.0

# Staging performance settings
API_RATE_LIMIT_WINDOW=900000
API_RATE_LIMIT_MAX=500
WS_MAX_CONNECTIONS=1000
WS_HEARTBEAT_INTERVAL=30000
WS_CONNECTION_TIMEOUT=60000

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL Staging Database
DATABASE_URL=postgresql://intendly_staging:staging_password@staging-db.internal:5432/intendly_staging
POSTGRES_DB=intendly_staging
POSTGRES_USER=intendly_staging
POSTGRES_PASSWORD=staging_password

# Connection Pool Settings
DB_POOL_MIN=2
DB_POOL_MAX=20
DB_IDLE_TIMEOUT=10000
DB_CONNECTION_TIMEOUT=5000

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================

# Redis Staging Configuration
REDIS_URL=redis://:staging_redis_password@staging-redis.internal:6379
REDIS_PASSWORD=staging_redis_password
REDIS_KEY_PREFIX=intendly:staging:
REDIS_MAX_RETRIES=3

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# JWT Configuration
JWT_SECRET=staging-jwt-secret-that-should-be-different-from-production
JWT_EXPIRES_IN=24h

# CORS Configuration
CORS_ORIGINS=https://staging.intendly.xyz,https://app-staging.intendly.xyz,http://localhost:3000

# Rate Limiting
RATE_LIMIT_POINTS=200
RATE_LIMIT_DURATION=60

# =============================================================================
# SSL/TLS CONFIGURATION
# =============================================================================

# SSL Certificate Configuration (staging certs)
SSL_CERT_PATH=/etc/ssl/certs/staging.intendly.crt
SSL_KEY_PATH=/etc/ssl/private/staging.intendly.key
SSL_CA_PATH=/etc/ssl/certs/ca-bundle.crt

# HTTPS Configuration
FORCE_HTTPS=true
HSTS_MAX_AGE=86400

# =============================================================================
# DOCKER & KUBERNETES
# =============================================================================

# Docker Registry
DOCKER_REGISTRY=ghcr.io/intendly
DOCKER_TAG=staging

# Kubernetes Configuration
KUBERNETES_NAMESPACE=intendly-staging
KUBERNETES_CLUSTER=staging-cluster

# Resource Limits (smaller than production)
BACKEND_CPU_LIMIT=1000m
BACKEND_MEMORY_LIMIT=1Gi
BACKEND_CPU_REQUEST=500m
BACKEND_MEMORY_REQUEST=512Mi

# =============================================================================
# MONITORING & LOGGING
# =============================================================================

# Monitoring Configuration
METRICS_ENABLED=true
PROMETHEUS_PORT=9090
GRAFANA_PASSWORD=staging_grafana_password
GRAFANA_SECRET_KEY=staging_grafana_secret_key

# Log Configuration
LOG_LEVEL=debug
LOG_FORMAT=json
LOG_MAX_FILES=14
LOG_MAX_SIZE=50m

# =============================================================================
# EXTERNAL SERVICES
# =============================================================================

# Cloud Provider Configuration (AWS Staging)
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=AKIA...
AWS_SECRET_ACCESS_KEY=...
S3_BUCKET=intendly-staging-assets

# CDN Configuration
CLOUDFLARE_API_TOKEN=your_cloudflare_staging_token
CLOUDFLARE_ZONE_ID=your_staging_zone_id

# =============================================================================
# BUSINESS CONFIGURATION
# =============================================================================

# Trading Configuration (more relaxed for testing)
BIDDING_WINDOW_MS=5000
MAX_SOLVER_FEE_BPS=50
MIN_BID_COUNT=1
MAX_SLIPPAGE_BPS=100

# Fee Configuration
PROTOCOL_FEE_BPS=10
FEE_COLLECTOR=0x0000000000000000000000000000000000000000

# =============================================================================
# BACKUP & DISASTER RECOVERY
# =============================================================================

# Database Backup Configuration
BACKUP_RETENTION_DAYS=7
BACKUP_SCHEDULE="0 4 * * *"  # Daily at 4 AM
BACKUP_S3_BUCKET=intendly-staging-backups

# Redis Backup Configuration
REDIS_BACKUP_ENABLED=true
REDIS_BACKUP_SCHEDULE="0 5 * * *"  # Daily at 5 AM

# =============================================================================
# PERFORMANCE OPTIMIZATION
# =============================================================================

# Node.js Performance
NODE_OPTIONS="--max-old-space-size=1024"
UV_THREADPOOL_SIZE=64

# Caching Configuration
CACHE_TTL=60
CACHE_MAX_SIZE=500

# =============================================================================
# ALERTING CONFIGURATION
# =============================================================================

# Slack Notifications
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/your/staging/webhook
SLACK_CHANNEL=#staging-alerts

# Email Alerts
SMTP_HOST=smtp.sendgrid.net
SMTP_PORT=587
SMTP_USER=apikey
SMTP_PASS=your_sendgrid_api_key
ALERT_EMAIL_FROM=staging-alerts@intendly.xyz
ALERT_EMAIL_TO=dev-team@intendly.xyz

# =============================================================================
# FRONTEND DEPLOYMENT
# =============================================================================

# Vercel Configuration
VERCEL_TOKEN=your_vercel_staging_token
VERCEL_PROJECT_ID=your_vercel_staging_project_id

# Public URLs for Frontend
NEXT_PUBLIC_API_URL=https://api-staging.intendly.xyz
NEXT_PUBLIC_WS_URL=wss://api-staging.intendly.xyz
NEXT_PUBLIC_BASE_URL=https://app-staging.intendly.xyz

# Public Blockchain Configuration
NEXT_PUBLIC_CHAIN_ID=195
NEXT_PUBLIC_SETTLEMENT_CONTRACT=0x0000000000000000000000000000000000000000
NEXT_PUBLIC_PERMIT2_ADDRESS=0x000000000022D473030F116dDEE9F6B43aC78BA3

# =============================================================================
# HEALTH CHECK URLS
# =============================================================================

# Service URLs for Health Checks
STAGING_API_URL=https://api-staging.intendly.xyz
STAGING_FRONTEND_URL=https://app-staging.intendly.xyz
STAGING_WS_URL=wss://api-staging.intendly.xyz
STAGING_GRAFANA_URL=https://monitoring-staging.intendly.xyz
STAGING_PROMETHEUS_URL=https://prometheus-staging.intendly.xyz

# Database Connection for Health Checks
DATABASE_HOST=staging-db.internal
DATABASE_PORT=5432
REDIS_HOST=staging-redis.internal
REDIS_PORT=6379

# =============================================================================
# TESTING & DEBUGGING
# =============================================================================

# Debug Configuration
ENABLE_DEBUG=true
DEBUG_WEBSOCKET=true
DEBUG_DATABASE=false

# Test Configuration
MOCK_SOLVER_ENABLED=true
TEST_MODE=true

# Performance Testing
LOAD_TEST_ENABLED=true
PERFORMANCE_MONITORING=true

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Feature Toggles for Staging
FEATURE_NEW_BIDDING_ALGORITHM=true
FEATURE_ENHANCED_MONITORING=true
FEATURE_BETA_API_ENDPOINTS=true
FEATURE_ADVANCED_ANALYTICS=true

# =============================================================================
# SECURITY NOTES
# =============================================================================

# STAGING SECURITY REMINDERS:
# 1. Use staging-specific credentials (never production)
# 2. Staging should mirror production security practices
# 3. Test security configurations before promoting to production
# 4. Use staging for security testing and vulnerability scanning
# 5. Regularly refresh staging data (sanitized production data)
# 6. Monitor staging for unusual activity
# 7. Use staging for load testing and performance validation
# 8. Implement proper access controls for staging environment